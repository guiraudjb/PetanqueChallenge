function init(self)
	-- Add initialization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
	msg.post(".", "acquire_input_focus")
	self.Exit = gui.get_node("Exit")
	self.Sound = gui.get_node("Sound")
	self.Increase_Number_Tours = gui.get_node("Increase_Number_Tours")
	self.Decrease_Number_Tours = gui.get_node("Decrease_Number_Tours")
	self.SelectedNumberTourText = gui.get_node("SelectedNumberTourText")
	gui.set_text(self.SelectedNumberTourText, NombreDeTours)
	
	if SoundVolume==true then
		gui.play_flipbook(self.Sound, hash("unmute"))
	else
		gui.play_flipbook(self.Sound, hash("mute"))

	end
	
end

local function playclick()
	if SoundVolume == true then
		sound.play("ClickSound#Click")
	end
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
	gui.set_text(self.SelectedNumberTourText, NombreDeTours)
	
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
	if action.pressed and gui.pick_node(gui.get_node("Exit"), action.x, action.y) then
		gui.play_flipbook(self.Exit, hash("stoneButton_Pressed"))
		playclick()
	end

	if action.released and gui.pick_node(gui.get_node("Exit"), action.x, action.y) then
		gui.play_flipbook(self.Exit, hash("stoneButton_Released"))
		msg.post("main:/CollectionLoader#main", "changeScene", { newScene = "MainMenu" })
	end

	if action.pressed and gui.pick_node(gui.get_node("Decrease_Number_Tours"), action.x, action.y) then
		gui.play_flipbook(self.Decrease_Number_Tours, hash("stoneButton_Pressed"))
		playclick()
	end

	if action.released and gui.pick_node(gui.get_node("Decrease_Number_Tours"), action.x, action.y) then
		gui.play_flipbook(self.Decrease_Number_Tours, hash("stoneButton_Released"))
		if NombreDeTours > 2 then
			NombreDeTours = NombreDeTours - 1
		end
	end


	if action.pressed and gui.pick_node(gui.get_node("Increase_Number_Tours"), action.x, action.y) then
		gui.play_flipbook(self.Increase_Number_Tours, hash("stoneButton_Pressed"))
		playclick()
	end

	if action.released and gui.pick_node(gui.get_node("Increase_Number_Tours"), action.x, action.y) then
		gui.play_flipbook(self.Increase_Number_Tours, hash("stoneButton_Released"))
		if NombreDeTours < 12 then
			NombreDeTours = NombreDeTours + 1
		end
	end
	

	if action.pressed and gui.pick_node(gui.get_node("Sound"), action.x, action.y) then
		playclick()
		
	end

	if action.released and gui.pick_node(gui.get_node("Sound"), action.x, action.y) then
		if SoundVolume==true then
			SoundVolume=false
			gui.play_flipbook(self.Sound, hash("mute"))
		else
			SoundVolume=true
			gui.play_flipbook(self.Sound, hash("unmute"))
			
		end
	end
	
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
